10-11-2024
Modules : Libraries/packages which provies utility functions
2 Types
    1. Built In
    2. Third party -> npmjs.com

utf-8

Logs : 

Paths
    Relative : ../picutres/photo.jpg
    Absolute : D:/users/pictures/photo.jpg
----------------------------------------------------------------------
11-11-2024
Create your own npm package
npm login
npm publish

15-11-2024
Ports
21 => FTP
443 => HTTPS etc

1. Create a software server using nodejs (built in module - http)
2. Open a port for requests (8080)
3. How will server know if a requests is received? Event listener - callback (logic and response)

18-11-2024
Server building
1. Listen for incoming requests
2. Send the responses

4 APIs (todos, users, products, list)
3 Methods (GET, POST, PUT)
12 APIS

Expressjs

NOTE: SEQUENCE OF APIS / CODE IS VERY IMPORTANT IN EXPRESS JS
---------------------------------------------------------------------
19-11-2024
1. URL Pram & Query Param
2. Middleware

Types of middlewares (5)
1. Application level middleware
2. Router-level middleware
3. Error handling middleware - (err,req,res,next)
4. Built in middleware - express.json()
5. Third Party middleware - responseTime, morgan etc
---------------------------------------------------------------------
20-11-2024
Loading Image / File : Inform express to scan all the files under "images" folder and match it with the requested api url, if the filename matches then its not an api, its a file 

URL Shortner App APIs
1. POST => Long URL as input, give short URL as output
2. GET => Redirect the user from short to long URL

1. Which long url?
2. If multiple short urls are available?

[
    {
        shortUrl: "asdfea32",
        longUrl: "http://longurl.com/sfdsdf.23rw3"
    }
]

schedulers
cron jobs
--------------------------------------------------
21-11-2024

Rendring HTML through express js
MVC Architecture
Database (Introduction & Queries)

Microservices

---------------------------------------------------
22-11-2024
MQL (Mongo Query Language)


Comparision Operators

== --> $eq
>  --> $gt
>= --> $gte
<  --> $lt
<= --> $lte
!= --> $ne

Logical Operators
&& --> $and
|| --> $or
!  --> $not


Read
Syntax : 
db.<collection-name>.find(<CONDITION>) // Find all data

Q. Write a query to fetch all products
db.products.find()

Q. Write a query to find product whose price is 999
db.products.find({
    price: 999
})

db.products.find({
    price: {
        $eq: 999
    }
})

Q. Find all products whose price is less than 500 ($lt: 500)
db.products.find({
    price: {
        $lt: 500
    }
})

Q. Find all products whose price is greater than 1000
db.products.find({
    price: {
        $gt: 1000
    }
})

Q. Find all the products with minimum rating of 4.5
db.products.find({
    rating: {
        $gte: 4.5
    }
})

Q. Find all the products whose price is between 500 and 600
db.products.find({
    $and: [
        {
            price: {
                $gt: 500
            }
        },
        {
            price: {
                $lt: 600
            }
        }
    ]
})

Q. Find all the products whose rating is between 4 and 4.5
db.products.find({
    $and: [
        {
            rating: {
                $gt: 4
            }
        },
        {
            rating: {
                $lt: 4.5
            }
        }
    ]
})

Q. Find all the products with minimum rating 4 and prices less than or equal to 500
db.products.find({
    $and: [
        {
            rating: {
                $gt: 4
            }
        },
        {
            price: {
                $lte: 500
            }
        }
    ]
}).count()

Q. Find all the products which has price less than 450 or minimum rating of 4.8
db.products.find({
    $or: [
        {
            price: {
                $lt: 450
            }
        },
        {
            rating: {
                $gte: 4.8
            }
        }
    ]
})

Q. Print total no of available documents in products collection
db.products.find().count()

Q. Insert a new product in db
insertMany([
    {},
    {}
])

db.products.insertOne({
  title: 'TV 43 Inch',
  description: 'Handcraft Chinese style art luxury palace hotel villa mansion home decor ceramic vase with brass fruit plate',
  price: 799,
  discountPercentage: 15.34,
  rating: 4.9,
  stock: 7,
  brand: 'sony',
  category: 'home-decoration',
  thumbnail: 'https://i.dummyjson.com/data/products/29/thumbnail.webp',
  images: [
    'https://i.dummyjson.com/data/products/29/1.jpg',
    'https://i.dummyjson.com/data/products/29/2.jpg',
    'https://i.dummyjson.com/data/products/29/3.webp',
    'https://i.dummyjson.com/data/products/29/4.webp',
    'https://i.dummyjson.com/data/products/29/thumbnail.webp'
  ]
})